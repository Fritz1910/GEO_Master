<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  
  <groupId>GEO_Master</groupId>
  <artifactId>GEO_Master</artifactId>
  <version>0.0.1-SNAPSHOT</version>

	<properties>
		<maven.compiler.release>10</maven.compiler.release>
		<maven.compiler.source>10</maven.compiler.source>
		<maven.compiler.target>10</maven.compiler.target>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<build>
		<plugins>

			<!-- define some requirements -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>3.0.0-M2</version>
				<executions>
					<execution>
						<id>enforce-tooling-versions</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<version>[3.5.3,)</version>
								</requireMavenVersion>
								<requireJavaVersion>
									<version>10</version>
								</requireJavaVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- create the module in the "release" folder to avoid conflicts with 
				"exploded" classes (same module twice in one directory) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.1.0</version>
				<configuration>
					<outputDirectory>${project.build.directory}/release</outputDirectory>
				</configuration>
			</plugin>

			<!-- perform some additional tasks (Maven does not support this yet) -->
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
				<executions>

					<!-- patch the module jar to feature a main class and a version number -->
					<!-- see https://issues.apache.org/jira/browse/MJAR-238 -->
					<execution>
						<id>patch-module-jar</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<exec executable="${java.home}/bin/jar" failonerror="true">

									<!-- add the main class -->
									<arg value="--main-class" />
									<arg value="org.geom.swing.SwingMain" />

									<!-- add the version number -->
									<arg value="--module-version" />
									<arg value="${project.version}" />

									<!-- update only -->
									<arg value="--update" />

									<!-- file to update -->
									<arg value="--file" />
									<arg
										value="${project.build.directory}/release/${project.artifactId}-${project.version}.jar" />
								</exec>
							</target>
						</configuration>
					</execution>

					<!-- create runimage with a minimal JRE and all required modules and 
						a launcher "bin/ModularizedApplication" in the "runimage" folder -->
					<!-- see https://maven.apache.org/plugins/maven-jlink-plugin -->
					<execution>
						<id>create-jre</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<exec executable="${java.home}/bin/jlink"
									failonerror="true">
									<!-- path to modules -->
									<arg value="-p" />
									<arg value="${project.build.directory}/release" />

									<!-- name(s) of root module(s), meaning modules, no classes! -->
									<arg value="--add-modules" />
									<arg value="org.geom.swing" />

									<!-- target folder for the runimage -->
									<arg value="--output" />
									<arg value="${project.build.directory}/runimage" />

									<!-- strip debug information -->
									<arg value="--strip-debug" />

									<!-- name of the launcher and module to launch, meaning modules, no classes -->
									<arg value="--launcher" />
									<arg value="GeoMaster=org.geom.swing" />
								</exec>
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

</project>